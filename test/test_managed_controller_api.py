# coding: utf-8

"""
    Spinnaker API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import spinnaker-python-client
from spinnaker-python-client.api.managed_controller_api import ManagedControllerApi  # noqa: E501
from spinnaker-python-client.rest import ApiException


class TestManagedControllerApi(unittest.TestCase):
    """ManagedControllerApi unit test stubs"""

    def setUp(self):
        self.api = spinnaker-python-client.api.managed_controller_api.ManagedControllerApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_pin_using_post(self):
        """Test case for create_pin_using_post

        Create a pin for an artifact in an environment  # noqa: E501
        """
        pass

    def test_delete_manifest_by_app_using_delete(self):
        """Test case for delete_manifest_by_app_using_delete

        Delete a delivery config manifest for an application  # noqa: E501
        """
        pass

    def test_delete_manifest_using_delete(self):
        """Test case for delete_manifest_using_delete

        Delete a delivery config manifest  # noqa: E501
        """
        pass

    def test_delete_pin_using_delete(self):
        """Test case for delete_pin_using_delete

        Unpin one or more artifact(s) in an environment. If the `reference` parameter is specified, only the corresponding artifact will be unpinned. If it's omitted, all pinned artifacts in the environment will be unpinned.  # noqa: E501
        """
        pass

    def test_delete_veto_using_delete(self):
        """Test case for delete_veto_using_delete

        Remove veto of an artifact version in an environment  # noqa: E501
        """
        pass

    def test_diff_manifest_using_post(self):
        """Test case for diff_manifest_using_post

        Ad-hoc validate and diff a config manifest  # noqa: E501
        """
        pass

    def test_diff_resource_using_post(self):
        """Test case for diff_resource_using_post

        Ad-hoc validate and diff a resource  # noqa: E501
        """
        pass

    def test_export_resource_using_get(self):
        """Test case for export_resource_using_get

        Generates an artifact definition based on the artifact used in a running cluster  # noqa: E501
        """
        pass

    def test_export_resource_using_get1(self):
        """Test case for export_resource_using_get1

        Generate a keel resource definition for a deployed cloud resource  # noqa: E501
        """
        pass

    def test_get_application_details_using_get(self):
        """Test case for get_application_details_using_get

        Get managed details about an application  # noqa: E501
        """
        pass

    def test_get_config_by_using_get(self):
        """Test case for get_config_by_using_get

        Get the delivery config associated with an application  # noqa: E501
        """
        pass

    def test_get_constraint_state_using_get(self):
        """Test case for get_constraint_state_using_get

        List up-to {limit} current constraint states for an environment  # noqa: E501
        """
        pass

    def test_get_manifest_artifacts_using_get(self):
        """Test case for get_manifest_artifacts_using_get

        Get the status of each version of each artifact in each environment  # noqa: E501
        """
        pass

    def test_get_manifest_using_get(self):
        """Test case for get_manifest_using_get

        Get a delivery config manifest  # noqa: E501
        """
        pass

    def test_get_manifest_yaml_using_get(self):
        """Test case for get_manifest_yaml_using_get

        Get a delivery config manifest  # noqa: E501
        """
        pass

    def test_get_resource_status_using_get(self):
        """Test case for get_resource_status_using_get

        Get status of a resource  # noqa: E501
        """
        pass

    def test_get_resource_using_get(self):
        """Test case for get_resource_using_get

        Get a resource  # noqa: E501
        """
        pass

    def test_get_resource_yaml_using_get(self):
        """Test case for get_resource_yaml_using_get

        Get a resource  # noqa: E501
        """
        pass

    def test_pause_application_using_post(self):
        """Test case for pause_application_using_post

        Pause management of an entire application  # noqa: E501
        """
        pass

    def test_pause_resource_using_post(self):
        """Test case for pause_resource_using_post

        Pause management of a resource  # noqa: E501
        """
        pass

    def test_resume_application_using_delete(self):
        """Test case for resume_application_using_delete

        Resume management of an entire application  # noqa: E501
        """
        pass

    def test_resume_resource_using_delete(self):
        """Test case for resume_resource_using_delete

        Resume management of a resource  # noqa: E501
        """
        pass

    def test_schema_using_get(self):
        """Test case for schema_using_get

        Ad-hoc validate and diff a config manifest  # noqa: E501
        """
        pass

    def test_update_constraint_status_using_post(self):
        """Test case for update_constraint_status_using_post

        Update the status of an environment constraint  # noqa: E501
        """
        pass

    def test_upsert_manifest_using_post(self):
        """Test case for upsert_manifest_using_post

        Create or update a delivery config manifest  # noqa: E501
        """
        pass

    def test_validate_manifest_using_post(self):
        """Test case for validate_manifest_using_post

        Validate a delivery config manifest  # noqa: E501
        """
        pass

    def test_veto_using_post(self):
        """Test case for veto_using_post

        Veto an artifact version in an environment  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
